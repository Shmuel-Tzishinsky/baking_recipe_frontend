{"version":3,"file":"static/js/554.dddb0d4c.chunk.js","mappings":"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","sources":["Components/AddNew/AddNew.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport \"./add_new.css\";\r\nimport { PiImageSquareFill } from \"react-icons/pi\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { AiOutlineHolder } from \"react-icons/ai\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useRecipes } from \"../../context/Recipe/RecipesContext\";\r\nimport { alertError } from \"../AlertOast\";\r\nimport { getStorageItem } from \"../../custom-hooks/useLocalStorage\";\r\n\r\nfunction AddNew() {\r\n  const { updateNewRecipe, state } = useRecipes();\r\n  const { error, allRecipes } = state;\r\n  console.log(\"🚀 ~ AddNew ~ error:\", error);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    image: null,\r\n    categories: [],\r\n    bakingTime: 10,\r\n    ingredients: [],\r\n    instructions: \"\",\r\n    notes: \"\",\r\n    favorite: false,\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n  const [alertSaveData, setAlertSaveDataOpen] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const fileInputRef = React.createRef();\r\n\r\n  const handleDivClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  // Calculate unique categories from filtered recipes\r\n  const categoriesFilterInitial = useMemo(() => {\r\n    const allCategories = allRecipes.flatMap((recipe) => recipe.categories);\r\n    setCategories([...new Set(allCategories)]);\r\n  }, [allRecipes]);\r\n\r\n  const handleRangeChange = (event) => {\r\n    setFormData({ ...formData, bakingTime: event.target.value });\r\n    updateRangeBackground(event.target);\r\n  };\r\n\r\n  const updateRangeBackground = (range) => {\r\n    const value = ((range.value - range.min) / (range.max - range.min)) * 100;\r\n    range.style.background = `linear-gradient(to right, var(--main-color) ${value}%, var(--hover-blur-bg) ${value}%)`;\r\n  };\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setFormData((prevState) => {\r\n      const newCategories = prevState.categories.includes(category)\r\n        ? prevState.categories.filter((cat) => cat !== category)\r\n        : [...prevState.categories, category];\r\n      return { ...prevState, categories: newCategories };\r\n    });\r\n  };\r\n\r\n  const handleCategorySubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newCategory && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n    }\r\n    setNewCategory(\"\");\r\n  };\r\n\r\n  const handleChange = (e, i) => {\r\n    const { name, value, type, alt } = e.target;\r\n    console.log(\"🚀 ~ handleChange ~  name, value, type, alt :\", name, value, type, alt);\r\n    if (type === \"file\") {\r\n    } else if (name === \"ingredients\") {\r\n      const yt = formData.ingredients;\r\n      const inv = yt\r\n        .map((e, index) => (index === parseFloat(alt) ? value : e))\r\n        .filter((e) => e !== \"\");\r\n      setFormData({ ...formData, ingredients: inv.length ? inv : [\"\"] });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n    console.log(formData);\r\n  };\r\n\r\n  const MAX_FILE_SIZE = 0.5 * 1024 * 1024; // 1MB\r\n\r\n  const handleImageUpload = (file, callback) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      const img = new Image();\r\n\r\n      img.src = reader.result;\r\n      img.onload = () => {\r\n        if (file.size <= MAX_FILE_SIZE) {\r\n          // If file size is within the limit, no need to compress\r\n          callback(reader.result);\r\n        } else {\r\n          // If file size exceeds the limit, compress the image\r\n          const canvas = document.createElement(\"canvas\");\r\n          const ctx = canvas.getContext(\"2d\");\r\n\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n\r\n          ctx.drawImage(img, 0, 0, img.width, img.height);\r\n\r\n          // Compress the image\r\n          canvas.toBlob(\r\n            (blob) => {\r\n              const newReader = new FileReader();\r\n              newReader.readAsDataURL(blob);\r\n              newReader.onload = () => {\r\n                callback(newReader.result);\r\n              };\r\n            },\r\n            \"image/jpeg\",\r\n            0.7\r\n          ); // Adjust the quality here (0.7 = 70% quality)\r\n        }\r\n      };\r\n    };\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (!file?.type) return;\r\n    if (![\"image/png\", \"image/jpeg\", \"image/jpg\"].includes(file?.type)) {\r\n      alertError(\"נא להעלות קובץ תמונה חוקי (PNG, JPG, JPEG).\");\r\n      return;\r\n    }\r\n\r\n    handleImageUpload(file, (resizedImage) => {\r\n      setFormData({ ...formData, [e.target.name]: resizedImage });\r\n    });\r\n  };\r\n\r\n  const handelSaveNewRecipe = async () => {\r\n    try {\r\n      if (formData.image == null && formData.title === \"\") {\r\n        alertError(\"הוספת תמונה ושם המתכון הם חובה.\");\r\n        return;\r\n      } else if (formData.title === \"\") {\r\n        alertError(\"הוספת שם התמתכון חובה.\");\r\n        return;\r\n      } else if (formData.image == null) {\r\n        alertError(\"הוספת תמונה היא חובה.\");\r\n        return;\r\n      }\r\n      setLoadingSave(true);\r\n      formData.userName = getStorageItem(\"name_user\");\r\n      const res = await updateNewRecipe({ NewRecipe: formData });\r\n      console.log(res);\r\n      if (res) setAlertSaveDataOpen(true);\r\n    } catch (error) {\r\n      setLoadingSave(false);\r\n      alertError(\"לא הצליח לשמור את הנתונים.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddNew\">\r\n      {/* image */}\r\n      <div className=\"cover-img\" onClick={handleDivClick}>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          name=\"image\"\r\n          onChange={handleFileChange}\r\n          style={{ display: \"none\" }}\r\n          accept=\".png, .jpg, .jpeg\"\r\n        />\r\n        {formData.image && <img src={formData.image} alt=\"\" />}\r\n        <div className=\"icon\" style={{ display: formData.image ? \"none\" : \"\" }}>\r\n          <PiImageSquareFill />\r\n        </div>\r\n        <p style={{ display: formData.image ? \"none\" : \"\" }}>הוסף תמונת שער</p>\r\n        <p style={{ display: formData.image ? \"none\" : \"\" }}>Png, Jpg, Jpeg</p>\r\n      </div>\r\n      {/* name */}\r\n      <div className=\"name\">\r\n        <h1>שם המתכון</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"הכנס/י את שם המתכון\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      {/* description */}\r\n      <div className=\"description\">\r\n        <h1>תיאור המתכון</h1>\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"ספר/י קצת על המתכון\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      {/* category */}\r\n      <div className=\"category\">\r\n        <h1>קטגוריה</h1>\r\n        <div className=\"category-container\">\r\n          {categories.map((category, i) => (\r\n            <div className=\"category-item\" key={i}>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"category-item-checkbox\"\r\n                id={`category-${i}`}\r\n                checked={formData.categories.includes(category)}\r\n                onChange={() => handleCategoryChange(category)}\r\n              />\r\n              <label htmlFor={`category-${i}`} className=\"category-item-checklabel\">\r\n                {category}\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <div className=\"category-item btn\" onClick={() => setCategoryModalOpen(true)}>\r\n            <label className=\"category-item-checklabel\">\r\n              <FaPlus />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Baking-time */}\r\n      <div className=\"Baking-time\">\r\n        <h1>\r\n          זמן ההכנה <span>(בדקות)</span>\r\n        </h1>\r\n        <div className=\"text\">\r\n          <p className={formData.bakingTime === 60 ? \"active\" : \"\"}>{\"< 60\"}</p>\r\n          <p className=\"active\">{formData.bakingTime}</p>\r\n          <p className={formData.bakingTime >= 10 ? \"active\" : \"\"}>{\"10 >\"}</p>\r\n        </div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"10\"\r\n          max=\"60\"\r\n          value={formData.bakingTime}\r\n          onChange={handleRangeChange}\r\n          onInput={(e) => updateRangeBackground(e.target)}\r\n          style={{\r\n            background: `linear-gradient(to left, var(--main-color) ${\r\n              (formData.bakingTime - 10) * 2\r\n            }%, var(--hover-blur-bg) ${(formData.bakingTime - 10) * 2}%)`,\r\n          }}\r\n        />\r\n      </div>\r\n      {/* מרכיבים */}\r\n      <div className=\"component-recipe\">\r\n        <h1>מרכיבים</h1>\r\n        <div className=\"component-recipe-container\">\r\n          {formData.ingredients.map((_, index) => (\r\n            <div className=\"component-recipe-item\" key={index}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"ingredients\"\r\n                alt={index}\r\n                placeholder={`הזן מרכיב ${index + 1}`}\r\n                value={formData.ingredients[index]}\r\n                onChange={handleChange}\r\n              />\r\n              <div className=\"icon\">\r\n                <AiOutlineHolder />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <input\r\n            type=\"text\"\r\n            value=\"+ הוסף\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"10px\",\r\n              cursor: \"pointer\",\r\n              width: \"calc(100% - 40px)\",\r\n              userSelect: \"none\",\r\n            }}\r\n            onClick={() => {\r\n              if (formData.ingredients[formData.ingredients.length - 1] !== \"\")\r\n                setFormData((prevFormData) => ({\r\n                  ...prevFormData,\r\n                  ingredients: [...prevFormData.ingredients, \"\"],\r\n                }));\r\n            }}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* steps */}\r\n      <div className=\"steps\">\r\n        <h1>צעדים</h1>\r\n        <div className=\"steps-container\">\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <React.Fragment key={index}>\r\n              <div className=\"steps-item\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  name=\"instructions\"\r\n                  placeholder=\"ספר קצת כל האוכל שלך\"\r\n                  value={formData.instructions}\r\n                  onChange={handleChange}\r\n                />\r\n                <div className=\"icon\">\r\n                  <p>{index + 1}</p>\r\n                  <AiOutlineHolder />\r\n                </div>\r\n              </div>\r\n              <div className=\"step-img\" onClick={() => alertError(\"לא פעיל בשלב הזה!\")}>\r\n                <FaCamera />\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Remarks */}\r\n      <div className=\"Remarks\" style={{ direction: \"rtl\" }}>\r\n        <h1>הערות</h1>\r\n        <textarea\r\n          name=\"notes\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          placeholder=\"יש לך הערות?\"\r\n          value={formData.notes}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"active\"\r\n        style={{ background: error ? \"#f33a3ad1\" : \"\" }}\r\n        onClick={handelSaveNewRecipe}\r\n        disabled={loadingSave}\r\n      >\r\n        שמור\r\n      </button>\r\n      {isCategoryModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h1>בחר קטגוריות</h1>\r\n            <form>\r\n              <div className=\"category-container\">\r\n                {categories.map((category, i) => (\r\n                  <div className=\"category-item\" key={i}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"category-item-checkbox\"\r\n                      id={`modal-category-${i}`}\r\n                      onChange={() => handleCategoryChange(category)}\r\n                      checked={formData.categories.includes(category)}\r\n                    />\r\n                    <label htmlFor={`modal-category-${i}`} className=\"category-item-checklabel\">\r\n                      {category}\r\n                    </label>\r\n                    <div\r\n                      className=\"del\"\r\n                      onClick={() => setCategories(categories.filter((cat) => cat !== category))}\r\n                    >\r\n                      <MdDelete />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                placeholder=\"הוסף קטגוריה חדשה\"\r\n              />\r\n              <div className=\"btns\">\r\n                <button\r\n                  type=\"button\"\r\n                  style={{ opacity: newCategory.length > 0 ? 1 : 0.4 }}\r\n                  onClick={handleCategorySubmit}\r\n                  className=\"active\"\r\n                >\r\n                  הוסף\r\n                </button>\r\n                <button type=\"button\" onClick={() => setCategoryModalOpen(false)}>\r\n                  סגור\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {alertSaveData && (\r\n        <div className=\"modal\" style={{ alignItems: \"center\" }}>\r\n          <div\r\n            className=\"modal-content\"\r\n            style={{ borderRadius: \"37px\", width: \"360px\", padding: \"40px\" }}\r\n          >\r\n            <img\r\n              src={require(`../../assets/images/save.png`)}\r\n              alt=\"\"\r\n              width=\"160px\"\r\n              style={{ margin: \"10px 0 20px 0\" }}\r\n            />\r\n            <h2 style={{ margin: \"20px 0\" }}>הועלה בהצלחה</h2>\r\n            <h4>המתכון שלך הועלה</h4>\r\n            <h4>תוכל/י לראות את זה בדף הבית</h4>\r\n            <NavLink to=\"/\">\r\n              <button className=\"active\">חזרה לדף הבית</button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n"],"names":["updateNewRecipe","state","useRecipes","error","allRecipes","console","log","formData","setFormData","useState","title","image","categories","bakingTime","ingredients","instructions","notes","favorite","setCategories","isCategoryModalOpen","setCategoryModalOpen","alertSaveData","setAlertSaveDataOpen","loadingSave","setLoadingSave","newCategory","setNewCategory","fileInputRef","React","updateRangeBackground","useMemo","allCategories","flatMap","recipe","Set","range","value","min","max","style","background","concat","handleCategoryChange","category","prevState","newCategories","includes","filter","cat","handleChange","e","i","name","type","alt","target","inv","map","index","parseFloat","length","_jsxs","className","children","onClick","handleDivClick","current","click","_jsx","ref","onChange","file","files","handleImageUpload","callback","reader","FileReader","readAsDataURL","onload","img","Image","src","result","size","canvas","document","createElement","ctx","getContext","width","height","drawImage","toBlob","blob","newReader","resizedImage","alertError","display","accept","PiImageSquareFill","placeholder","description","id","checked","htmlFor","FaPlus","event","onInput","_","AiOutlineHolder","textAlign","marginTop","cursor","userSelect","prevFormData","readOnly","Array","from","FaCamera","direction","cols","rows","async","userName","getStorageItem","res","NewRecipe","disabled","MdDelete","opacity","preventDefault","alignItems","borderRadius","padding","require","margin","NavLink","to"],"sourceRoot":""}