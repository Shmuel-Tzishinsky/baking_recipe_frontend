{"version":3,"file":"static/js/835.ab760359.chunk.js","mappings":"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","sources":["Components/RecipeCon/RecipeCon.js","Components/common/loading/Loading-login.js","Components/home/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./RecipeCon.css\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\nimport LoadingLogin from \"../common/loading/Loading-login\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function RecipeCon({\r\n  filteredRecipes,\r\n  finalFilteredRecipes,\r\n  setView,\r\n  view,\r\n  updateFavoriteRecipe,\r\n}) {\r\n  return (\r\n    <div className=\"image-container\">\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          onClick={() => setView(\"grid\")}\r\n          style={{\r\n            borderBottom:\r\n              view === \"grid\" ? \"2px solid var(--main-color)\" : \".5px solid var(--txt-color)\",\r\n          }}\r\n        >\r\n          תצוגת רשת\r\n        </button>\r\n        <button\r\n          onClick={() => setView(\"list\")}\r\n          style={{\r\n            borderBottom:\r\n              view !== \"grid\" ? \"2px solid var(--main-color)\" : \".5px solid var(--txt-color)\",\r\n          }}\r\n        >\r\n          תצוגת רשימה\r\n        </button>\r\n      </div>\r\n      <div className={view === \"grid\" ? \"image-grid\" : \"image-list\"}>\r\n        {finalFilteredRecipes.map((image) => (\r\n          <ImageCard\r\n            key={image._id}\r\n            image={image}\r\n            view={view}\r\n            id={image._id}\r\n            favorite={image.favorite}\r\n            updateFavoriteRecipe={updateFavoriteRecipe}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageCard({ image, view, favorite, id, updateFavoriteRecipe }) {\r\n  const [loadingFa, setLoadingFa] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const openRecipeData = (id) => {\r\n    navigate(`/recipe/${id}`);\r\n  };\r\n\r\n  const updateFavorite = async () => {\r\n    setLoadingFa(true);\r\n    await updateFavoriteRecipe({ favorite: !favorite, id: id });\r\n    setLoadingFa(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={view === \"grid\" ? \"image-card-grid\" : \"image-card-list\"}\r\n      onClick={() => openRecipeData(id)}\r\n    >\r\n      <div className=\"top-title\">\r\n        <img src={require(\"../../assets/images/profile1.png\")} alt=\"\" />\r\n        <div>{image.userName}</div>\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          updateFavorite();\r\n        }}\r\n        className={favorite ? \"heart-love handel\" : \"heart-love\"}\r\n      >\r\n        {loadingFa ? <LoadingLogin /> : favorite ? <FaHeart /> : <FaRegHeart />}\r\n      </div>\r\n      <img className=\"img-cover\" src={image.image} alt={image.title} />\r\n      <div className=\"image-info\">\r\n        <h4>{image.title}</h4>\r\n        <div className=\"image-content\">\r\n          {image.categories && <p>{image.categories}</p>}\r\n          {image.bakingTime && <p> • {image.bakingTime}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./loading-login.css\";\n\nconst LoadingLogin = () => <div className=\"loading-login loading-login-full-height\"></div>;\n\nexport default LoadingLogin;\n","import \"./home.css\";\nimport { useRecipes } from \"../../context/Recipe/RecipesContext\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { useMemo, useState } from \"react\";\nimport RecipeCon from \"../RecipeCon/RecipeCon\";\n\nfunction Home() {\n  const { state, updateFavoriteRecipe } = useRecipes();\n  const { allRecipes } = state;\n  const [view, setView] = useState(\"grid\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  // Filter recipes based on search term\n  const filteredRecipes = useMemo(() => {\n    return allRecipes.filter((recipe) => recipe.title.includes(searchTerm));\n  }, [searchTerm, allRecipes]);\n\n  // Calculate unique categories from filtered recipes\n  useMemo(() => {\n    const allCategories = filteredRecipes.flatMap((recipe) => recipe.categories);\n    setSelectedCategory([...new Set(allCategories)]);\n  }, [filteredRecipes]);\n\n  // Filter recipes based on selected categories\n  const finalFilteredRecipes = useMemo(() => {\n    return filteredRecipes.filter(\n      (recipe) =>\n        selectedCategories.length === 0 ||\n        selectedCategories.every((category) => recipe.categories.includes(category))\n    );\n  }, [filteredRecipes, selectedCategories]);\n\n  // Handle category selection\n  const handleCategoryChange = (category) => {\n    setSelectedCategories((prevSelected) =>\n      prevSelected.includes(category)\n        ? prevSelected.filter((c) => c !== category)\n        : [...prevSelected, category]\n    );\n  };\n\n  return (\n    <main>\n      <div className=\"search-main\">\n        <BiSearch />\n        <input\n          type=\"text\"\n          placeholder=\"חיפוש מתכון..\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />{\" \"}\n      </div>\n      <div className=\"category-title\">קטגוריות</div>\n      <div className=\"category-container\">\n        {selectedCategory?.map((cate, i) => (\n          <div className=\"category-item\" key={i}>\n            <input\n              type=\"checkbox\"\n              className=\"category-item-checkbox\"\n              id={i}\n              checked={selectedCategories.includes(cate)}\n              onChange={() => handleCategoryChange(cate)}\n            />\n            <label htmlFor={i} className=\"category-item-checklabel\">\n              {cate}\n            </label>\n          </div>\n        ))}\n      </div>\n      <div className=\"space\" />\n      <RecipeCon\n        {...{ filteredRecipes, finalFilteredRecipes, setView, view, updateFavoriteRecipe }}\n      />\n    </main>\n  );\n}\n\nexport default Home;\n"],"names":["RecipeCon","_ref","filteredRecipes","finalFilteredRecipes","setView","view","updateFavoriteRecipe","_jsxs","className","children","_jsx","onClick","style","borderBottom","map","image","ImageCard","id","_id","favorite","_ref2","loadingFa","setLoadingFa","useState","navigate","useNavigate","concat","openRecipeData","src","require","alt","userName","e","stopPropagation","async","updateFavorite","LoadingLogin","FaHeart","FaRegHeart","title","categories","bakingTime","state","useRecipes","allRecipes","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedCategories","setSelectedCategories","useMemo","filter","recipe","includes","allCategories","flatMap","Set","length","every","category","BiSearch","type","placeholder","value","onChange","target","cate","i","checked","handleCategoryChange","prevSelected","c","htmlFor"],"sourceRoot":""}