{"version":3,"file":"static/js/695.c407966a.chunk.js","mappings":"sLAkBA,QAbA,WACE,MAAM,MAAEA,EAAK,qBAAEC,IAAyBC,EAAAA,EAAAA,OAElC,gBAAEC,GAAoBH,EACtBI,EAAaD,GACZE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,QAEjC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAOC,qBAAsBR,EAAYE,UAASD,OAAMJ,0BAGxE,C,sFCXe,SAASU,EAASE,GAM7B,IAN8B,gBAChCC,EAAe,qBACfF,EAAoB,QACpBN,EAAO,KACPD,EAAI,qBACJJ,GACDY,EACC,OACEE,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBC,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMV,EAAQ,QACvBW,MAAO,CACLC,aACW,SAATb,EAAkB,8BAAgC,+BACpDK,SACH,uDAGDF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMV,EAAQ,QACvBW,MAAO,CACLC,aACW,SAATb,EAAkB,8BAAgC,+BACpDK,SACH,sEAIHF,EAAAA,EAAAA,KAAA,OAAKC,UAAoB,SAATJ,EAAkB,aAAe,aAAaK,SAC3DE,EAAqBO,KAAKC,IACzBZ,EAAAA,EAAAA,KAACa,EAAS,CAERD,MAAOA,EACPf,KAAMA,EACNiB,GAAIF,EAAMG,IACVC,SAAUJ,EAAMI,SAChBvB,qBAAsBA,GALjBmB,EAAMG,WAWvB,CAEA,SAASF,EAASI,GAAuD,IAAtD,MAAEL,EAAK,KAAEf,EAAI,SAAEmB,EAAQ,GAAEF,EAAE,qBAAErB,GAAsBwB,EACpE,MAAOC,EAAWC,IAAgBpB,EAAAA,EAAAA,WAAS,GACrCqB,GAAWC,EAAAA,EAAAA,MAYjB,OACEd,EAAAA,EAAAA,MAAA,OACEN,UAAoB,SAATJ,EAAkB,kBAAoB,kBACjDW,QAASA,IAbWM,KACtBM,EAAS,WAADE,OAAYR,GAAK,EAYRS,CAAeT,GAAIZ,SAAA,EAElCK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKwB,IAAKC,EAAQ,MAAqCC,IAAI,MAC3D1B,EAAAA,EAAAA,KAAA,OAAAE,SAAMU,EAAMe,eAEd3B,EAAAA,EAAAA,KAAA,OACEQ,QAAUoB,IACRA,EAAEC,kBAjBaC,WACrBX,GAAa,SACP1B,EAAqB,CAAEuB,UAAWA,EAAUF,GAAIA,IACtDK,GAAa,EAAM,EAebY,EAAgB,EAElB9B,UAAWe,EAAW,oBAAsB,aAAad,SAExDgB,GAAYlB,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,IAAMhB,GAAWhB,EAAAA,EAAAA,KAACiC,EAAAA,IAAO,KAAMjC,EAAAA,EAAAA,KAACkC,EAAAA,IAAU,OAEtElC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAYuB,IAAKZ,EAAMA,MAAOc,IAAKd,EAAMuB,SACxD5B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKU,EAAMuB,SACX5B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gBAAeC,SAAA,CAC3BU,EAAMwB,aAAcpC,EAAAA,EAAAA,KAAA,KAAAE,SAAIU,EAAMwB,aAC9BxB,EAAMyB,aAAc9B,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,WAAIU,EAAMyB,sBAK5C,C,+CC3FA,MAEA,EAFqBL,KAAMhC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2C","sources":["Components/Favorite/Favorite.js","Components/RecipeCon/RecipeCon.js","Components/common/loading/Loading-login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport RecipeCon from \"../RecipeCon/RecipeCon\";\r\nimport \"./Favorite.css\";\r\nimport { useRecipes } from \"../../context/Recipe/RecipesContext\";\r\n\r\nfunction Favorite() {\r\n  const { state, updateFavoriteRecipe } = useRecipes();\r\n\r\n  const { favoriteRecipes } = state;\r\n  const allRecipes = favoriteRecipes;\r\n  const [view, setView] = useState(\"grid\");\r\n\r\n  return (\r\n    <div className=\"favorite\">\r\n      <RecipeCon {...{ finalFilteredRecipes: allRecipes, setView, view, updateFavoriteRecipe }} />\r\n    </div>\r\n  );\r\n}\r\nexport default Favorite;\r\n","import React, { useState } from \"react\";\r\nimport \"./RecipeCon.css\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\nimport LoadingLogin from \"../common/loading/Loading-login\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function RecipeCon({\r\n  filteredRecipes,\r\n  finalFilteredRecipes,\r\n  setView,\r\n  view,\r\n  updateFavoriteRecipe,\r\n}) {\r\n  return (\r\n    <div className=\"image-container\">\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          onClick={() => setView(\"grid\")}\r\n          style={{\r\n            borderBottom:\r\n              view === \"grid\" ? \"2px solid var(--main-color)\" : \".5px solid var(--txt-color)\",\r\n          }}\r\n        >\r\n          תצוגת רשת\r\n        </button>\r\n        <button\r\n          onClick={() => setView(\"list\")}\r\n          style={{\r\n            borderBottom:\r\n              view !== \"grid\" ? \"2px solid var(--main-color)\" : \".5px solid var(--txt-color)\",\r\n          }}\r\n        >\r\n          תצוגת רשימה\r\n        </button>\r\n      </div>\r\n      <div className={view === \"grid\" ? \"image-grid\" : \"image-list\"}>\r\n        {finalFilteredRecipes.map((image) => (\r\n          <ImageCard\r\n            key={image._id}\r\n            image={image}\r\n            view={view}\r\n            id={image._id}\r\n            favorite={image.favorite}\r\n            updateFavoriteRecipe={updateFavoriteRecipe}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageCard({ image, view, favorite, id, updateFavoriteRecipe }) {\r\n  const [loadingFa, setLoadingFa] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const openRecipeData = (id) => {\r\n    navigate(`/recipe/${id}`);\r\n  };\r\n\r\n  const updateFavorite = async () => {\r\n    setLoadingFa(true);\r\n    await updateFavoriteRecipe({ favorite: !favorite, id: id });\r\n    setLoadingFa(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={view === \"grid\" ? \"image-card-grid\" : \"image-card-list\"}\r\n      onClick={() => openRecipeData(id)}\r\n    >\r\n      <div className=\"top-title\">\r\n        <img src={require(\"../../assets/images/profile1.png\")} alt=\"\" />\r\n        <div>{image.userName}</div>\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          updateFavorite();\r\n        }}\r\n        className={favorite ? \"heart-love handel\" : \"heart-love\"}\r\n      >\r\n        {loadingFa ? <LoadingLogin /> : favorite ? <FaHeart /> : <FaRegHeart />}\r\n      </div>\r\n      <img className=\"img-cover\" src={image.image} alt={image.title} />\r\n      <div className=\"image-info\">\r\n        <h4>{image.title}</h4>\r\n        <div className=\"image-content\">\r\n          {image.categories && <p>{image.categories}</p>}\r\n          {image.bakingTime && <p> • {image.bakingTime}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./loading-login.css\";\n\nconst LoadingLogin = () => <div className=\"loading-login loading-login-full-height\"></div>;\n\nexport default LoadingLogin;\n"],"names":["state","updateFavoriteRecipe","useRecipes","favoriteRecipes","allRecipes","view","setView","useState","_jsx","className","children","RecipeCon","finalFilteredRecipes","_ref","filteredRecipes","_jsxs","onClick","style","borderBottom","map","image","ImageCard","id","_id","favorite","_ref2","loadingFa","setLoadingFa","navigate","useNavigate","concat","openRecipeData","src","require","alt","userName","e","stopPropagation","async","updateFavorite","LoadingLogin","FaHeart","FaRegHeart","title","categories","bakingTime"],"sourceRoot":""}